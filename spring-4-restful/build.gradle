buildscript {
    repositories {
        mavenLocal()
    }
    dependencies {
        classpath 'net.saliman:gradle-cobertura-plugin:2.3.2'
    }
}

plugins {
    id 'org.asciidoctor.convert' version '1.5.3'
}


apply plugin: 'java'
apply plugin: 'net.saliman.cobertura'
//apply plugin: 'org.asciidoctor.convert'
// apply plugin: "jacoco"
//apply plugin: 'org.asciidoctor.convert'

group = 'com.cmartin.learn'
version = '1.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    attributes = ['snippets': snippetsDir, 'separateOutputDirs': false]
    sources {
        include '**/*.adoc'
    }
    sourceDir file(snippetsDir)
    dependsOn test
}

dependencies {
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.7.5'
    compile 'com.fasterxml.jackson.core:jackson-core:2.7.5'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.5'
    compile 'org.projectlombok:lombok:1.16.8'
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'org.springframework:spring-webmvc:4.3.1.RELEASE'

    testCompile 'org.hamcrest:java-hamcrest:2.0.0.0'
    testCompile 'com.jayway.jsonpath:json-path:2.2.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.0.81-beta'
    testCompile 'org.springframework.restdocs:spring-restdocs-core:1.1.0.RELEASE'
    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc:1.1.0.RELEASE'
}

jar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

task listCompileJars << {
    configurations.compile.each { File file -> println file.name }
}

task listTestJars << {
    configurations.testCompile.each { File file -> println file.name }
}